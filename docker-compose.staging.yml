services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - letsencrypt-certs:/etc/nginx/certs
      - letsencrypt-vhost-d:/etc/nginx/vhost.d
      - letsencrypt-html:/usr/share/nginx/html
      - static_volume:/home/app/web/staticfiles # Mount static files
      - media_volume:/home/app/web/mediafiles
      - ./nginx-proxy/static.conf:/etc/nginx/vhost.d/default_location
    networks:
      - my_media_network

  letsencrypt:
    image: nginxproxy/acme-companion
    container_name: letsencrypt
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt-certs:/etc/nginx/certs
      - letsencrypt-vhost-d:/etc/nginx/vhost.d
      - letsencrypt-html:/usr/share/nginx/html
      - ./nginx-proxy/static.conf:/etc/nginx/vhost.d/default_location
      - static_volume:/home/app/web/staticfiles
    environment:
      - DEFAULT_EMAIL=devshittu@gmail.com
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - DEBUG=true
      - ACME_CA_URI=https://acme-staging-v02.api.letsencrypt.org/directory # Use Let's Encrypt staging
    networks:
      - my_media_network


  frontend-app:
    container_name: frontend-app
    build:
      context: .
      dockerfile: Dockerfile.dev

    image: devshittu/mediaapp:tahoe-ui-latest
    # Set environment variables directly in the docker-compose file
    environment:
      # ENV_VARIABLE: ${ENV_VARIABLE}
      # NEXT_PUBLIC_ENV_VARIABLE: ${NEXT_PUBLIC_ENV_VARIABLE}
      - NODE_ENV=development
      - VIRTUAL_HOST=tahoe-ui.duckdns.org,www.tahoe-ui.duckdns.org
      - LETSENCRYPT_HOST=tahoe-ui.duckdns.org,www.tahoe-ui.duckdns.org
      - LETSENCRYPT_EMAIL=devshittu@gmail.com

    # Set envrionment variables based on the .env file
    env_file:
      - .env.docker-compose

    restart: always
    ports:
      - 3000:3000
    networks:
      - my_media_network
    # depends_on:
    #   - web-app


  duckdns:
    image: lscr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - SUBDOMAINS=${SUBDOMAINS}
      - TOKEN=${DUCKDNS_TOKEN}
      - UPDATE_IP=ipv4
      - LOG_FILE=false
    networks:
      - my_media_network
    volumes:
      - /path/to/duckdns/config:/config
    restart: unless-stopped
# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  my_media_network:
    external: true
volumes:
  media_volume:
  frontend-node-modules:

# frontend-node-modules:
# Path: docker-compose.staging.yml
# /Users/mshittu/programming-projects/javascript/react/new-next/docker-compose.staging.yml
